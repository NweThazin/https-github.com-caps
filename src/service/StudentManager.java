package service;

import java.sql.SQLException;
import java.util.ArrayList;

import dao.AutoGenerateIDDAO;
import dao.DAOFactory;
import dao.StudentDAO;
import exception.DAOException;
import exception.NotFoundException;
import model.StudentDTO;

public class StudentManager {

	private StudentDAO studentDAO;
	private AutoGenerateIDDAO autogenerateDAO;

	// Constructor for StudentManager
	public StudentManager() {
		studentDAO = DAOFactory.getStudentDAO();
		autogenerateDAO = DAOFactory.getGenerateIDDAO();
	}

	// Auto Generate Student ID
	public String getStudentID() {
		try {
			return autogenerateDAO.generateStudentID();
		} catch (ClassNotFoundException | SQLException | NotFoundException e) {
			e.printStackTrace();
		}
		return "";
	}

	// Add New Student
	public int addStudent(StudentDTO student) throws ClassNotFoundException, SQLException, NotFoundException {
		try {
			return studentDAO.addStudent(student);
		} catch (DAOException e) {
			e.printStackTrace();
		}
		return 0;
	}

	// Find All Students lists
	public ArrayList<StudentDTO> findAllStudent()
			throws ClassNotFoundException, DAOException, SQLException, NotFoundException {
		try {
			ArrayList<StudentDTO> currentList = new ArrayList<StudentDTO>();
			currentList = studentDAO.findAllStudent();
			return currentList;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	// Find Student By ID
	public StudentDTO findStudentByID(String studentID) {
		try {
			StudentDTO stu = new StudentDTO();
			stu = studentDAO.findStudentByID(studentID);
			return stu;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	// Remove Student from DB
	public int removeStudent(String studentID) throws ClassNotFoundException, SQLException, NotFoundException {
		try {
			return studentDAO.removeStudent(studentID);
		} catch (DAOException e) {
			e.printStackTrace();
		}
		return 0;
	}

	// Update Student to DB
	public int updateStudent(StudentDTO stu) throws ClassNotFoundException, SQLException, NotFoundException {
		try {
			return studentDAO.updateStudent(stu);
		} catch (DAOException e) {
			e.printStackTrace();
		}
		return 0;
	}

	//For View Course Enrollments
	public ArrayList<StudentDTO> findStudentByCriteria(StudentDTO studentDTO) {
		try {
			return studentDAO.findStudentByCriteria(studentDTO);
		} catch (DAOException e) {
			e.printStackTrace();
		}
		return null;
	}
}
